# Auto-Generate Documentation (Based on event-harvester patterns)  
# Modified for test branch validation - will revert to full branch set after testing

name: Auto-Generate Documentation
on:
  push:
    branches: [test]  # TESTING: Focus on test branch for immediate validation
  pull_request:
    branches: [test]
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 0'  # Weekly on Sunday at 2 AM UTC

permissions:
  contents: write

jobs:
  generate-documentation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 50  # Get enough history for meaningful context
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prevent workflow conflicts
        run: |
          # Random delay to stagger with other workflows
          DELAY=$((RANDOM % 45 + 15))
          echo "⏳ Staggering execution (${DELAY}s delay) to prevent conflicts..."
          sleep $DELAY

      - name: Create auto-generated directory
        run: mkdir -p agentic-development/docs/auto-generated

      # Generate Recent Commits Documentation
      - name: Generate Recent Commits Documentation  
        run: |
          cat > agentic-development/docs/auto-generated/recent-commits.md << 'EOF'
          # Recent Commits & Development Context
          **Generated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")  
          **Repository**: ${{ github.repository }}
          **Branch**: ${{ github.ref_name }}  
          **Triggered by**: ${{ github.actor }}
          **Event**: ${{ github.event_name }}
          
          > This document provides Claude agents with recent commit context to understand what has been done recently and maintain continuity across development sessions.
          
          ## Current Branch Status
          
          - **Branch**: `${{ github.ref_name }}`
          - **Latest Commit**: `${{ github.sha }}`
          - **Commit Message**: "${{ github.event.head_commit.message || 'N/A' }}"
          - **Author**: ${{ github.event.head_commit.author.name || github.actor }}
          - **Timestamp**: ${{ github.event.head_commit.timestamp || 'N/A' }}
          
          ## Recent Commits (Last 25)
          
          EOF
          
          # Generate detailed commit history with file changes
          echo "### Detailed Commit History" >> agentic-development/docs/auto-generated/recent-commits.md
          echo "" >> agentic-development/docs/auto-generated/recent-commits.md
          
          git log --oneline --decorate --graph -25 --pretty=format:"%h|%ad|%an|%s|%D" --date=format:"%Y-%m-%d %H:%M" | while IFS='|' read hash date author message refs; do
            echo "#### \`$hash\` - $message" >> agentic-development/docs/auto-generated/recent-commits.md
            echo "- **Date**: $date" >> agentic-development/docs/auto-generated/recent-commits.md
            echo "- **Author**: $author" >> agentic-development/docs/auto-generated/recent-commits.md
            if [ -n "$refs" ]; then
              echo "- **Refs**: $refs" >> agentic-development/docs/auto-generated/recent-commits.md
            fi
            
            # Get files changed in this commit
            files_changed=$(git show --name-only --pretty=format: "$hash" 2>/dev/null | grep -v '^$' | head -10)
            if [ -n "$files_changed" ]; then
              echo "- **Files Changed**:" >> agentic-development/docs/auto-generated/recent-commits.md
              echo "$files_changed" | while read file; do
                if [ -n "$file" ]; then
                  echo "  - \`$file\`" >> agentic-development/docs/auto-generated/recent-commits.md
                fi
              done
            fi
            echo "" >> agentic-development/docs/auto-generated/recent-commits.md
          done
          
          # Add branch analysis
          echo "## Branch Analysis" >> agentic-development/docs/auto-generated/recent-commits.md
          echo "" >> agentic-development/docs/auto-generated/recent-commits.md
          
          echo "### Commit Types (Last 25 commits)" >> agentic-development/docs/auto-generated/recent-commits.md
          git log --oneline -25 --pretty=format:"%s" | grep -oE '^[a-z]+(\([^)]+\))?' | sort | uniq -c | sort -nr | head -10 | while read count type; do
            echo "- \`$type\`: $count commits" >> agentic-development/docs/auto-generated/recent-commits.md
          done
          echo "" >> agentic-development/docs/auto-generated/recent-commits.md
          
          echo "### Most Active Files (Last 25 commits)" >> agentic-development/docs/auto-generated/recent-commits.md
          git log --name-only --pretty=format: -25 | grep -v '^$' | sort | uniq -c | sort -nr | head -10 | while read count file; do
            if [ -n "$file" ]; then
              echo "- \`$file\`: $count changes" >> agentic-development/docs/auto-generated/recent-commits.md
            fi
          done
          echo "" >> agentic-development/docs/auto-generated/recent-commits.md

      # Generate Current State Documentation
      - name: Generate Current State Documentation
        run: |
          cat > agentic-development/docs/auto-generated/current-state.md << 'EOF'
          # Current System State
          **Generated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          **Repository**: ${{ github.repository }}
          
          ## Branch Information
          - **Current Branch**: ${{ github.ref_name }}
          - **Commit SHA**: ${{ github.sha }}
          - **Commit Message**: ${{ github.event.head_commit.message || 'N/A' }}
          - **Author**: ${{ github.event.head_commit.author.name || github.actor }}
          - **Timestamp**: ${{ github.event.head_commit.timestamp || 'N/A' }}
          
          ## Environment Status
          - **Production** (main): ${{ github.ref == 'refs/heads/main' && '✅ Active' || '⏸️ Inactive' }}
          - **Staging**: ${{ github.ref == 'refs/heads/stage' && '✅ Active' || '⏸️ Inactive' }}
          - **UAT/Testing**: ${{ github.ref == 'refs/heads/test' && '✅ Active' || '⏸️ Inactive' }}
          - **Development**: ${{ github.ref == 'refs/heads/dev' && '✅ Active' || '⏸️ Inactive' }}
          
          ## Repository Structure
          EOF
          
          # Add basic repository information
          echo "- **Repository**: ${{ github.repository }}" >> agentic-development/docs/auto-generated/current-state.md
          echo "- **Default Branch**: ${{ github.event.repository.default_branch || 'main' }}" >> agentic-development/docs/auto-generated/current-state.md
          echo "- **Language**: ${{ github.event.repository.language || 'N/A' }}" >> agentic-development/docs/auto-generated/current-state.md
          
          # Check for key files
          echo "" >> agentic-development/docs/auto-generated/current-state.md
          echo "## Key Files Present" >> agentic-development/docs/auto-generated/current-state.md
          for file in package.json composer.json Cargo.toml requirements.txt pom.xml build.gradle; do
            if [ -f "$file" ]; then
              echo "- ✅ \`$file\`" >> agentic-development/docs/auto-generated/current-state.md
            fi
          done
          
          # Check for documentation
          echo "" >> agentic-development/docs/auto-generated/current-state.md
          echo "## Documentation Status" >> agentic-development/docs/auto-generated/current-state.md
          doc_count=$(find . -name "*.md" -not -path "./node_modules/*" -not -path "./.git/*" | wc -l)
          echo "- **Markdown files**: $doc_count" >> agentic-development/docs/auto-generated/current-state.md
          
          if [ -f "README.md" ]; then
            echo "- ✅ README.md present" >> agentic-development/docs/auto-generated/current-state.md
          else
            echo "- ❌ README.md missing" >> agentic-development/docs/auto-generated/current-state.md
          fi
          
          if [ -d "docs/" ]; then
            echo "- ✅ docs/ directory present" >> agentic-development/docs/auto-generated/current-state.md
          else
            echo "- ❌ docs/ directory missing" >> agentic-development/docs/auto-generated/current-state.md
          fi

      # Generate Documentation Tree
      - name: Generate Documentation Tree
        run: |
          cat > agentic-development/docs/auto-generated/doc-tree.md << 'EOF'
          # Documentation Tree
          **Generated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          **Repository**: ${{ github.repository }}
          **Branch**: ${{ github.ref_name }}
          
          ## Documentation Structure
          EOF
          
          # Function to add file info with git history
          if [ -d "docs/" ]; then
            echo "" >> agentic-development/docs/auto-generated/doc-tree.md
            echo "### /docs Directory Structure" >> agentic-development/docs/auto-generated/doc-tree.md
            find docs/ -name "*.md" -type f | sort | while read -r file; do
              if [ -f "$file" ]; then
                modified=$(git log -1 --format="%ad" --date=format:"%Y-%m-%d" -- "$file" 2>/dev/null || echo "Unknown")
                size=$(wc -c < "$file" 2>/dev/null | awk '{print $1}')
                lines=$(wc -l < "$file" 2>/dev/null | awk '{print $1}')
                echo "- [\`$file\`](./$file) (Modified: $modified, $lines lines, $size bytes)" >> agentic-development/docs/auto-generated/doc-tree.md
              fi
            done
          fi
          
          # Root level documentation
          echo "" >> agentic-development/docs/auto-generated/doc-tree.md
          echo "### Root Level Documentation" >> agentic-development/docs/auto-generated/doc-tree.md
          for file in *.md; do
            if [ -f "$file" ] && [ "$file" != "*.md" ]; then
              modified=$(git log -1 --format="%ad" --date=format:"%Y-%m-%d" -- "$file" 2>/dev/null || echo "Unknown")
              lines=$(wc -l < "$file" 2>/dev/null | awk '{print $1}')
              echo "- [\`$file\`](./$file) (Modified: $modified, $lines lines)" >> agentic-development/docs/auto-generated/doc-tree.md
            fi
          done
          
          # Summary statistics
          echo "" >> agentic-development/docs/auto-generated/doc-tree.md
          echo "## Documentation Statistics" >> agentic-development/docs/auto-generated/doc-tree.md
          total_docs=$(find . -name "*.md" -not -path "./node_modules/*" -not -path "./.git/*" | wc -l)
          echo "- **Total documentation files**: $total_docs" >> agentic-development/docs/auto-generated/doc-tree.md
          
          if [ $total_docs -gt 0 ]; then
            total_lines=$(find . -name "*.md" -not -path "./node_modules/*" -not -path "./.git/*" -exec wc -l {} + | tail -1 | awk '{print $1}' || echo "0")
            echo "- **Total lines**: $total_lines" >> agentic-development/docs/auto-generated/doc-tree.md
          fi

      # Check for changes and commit
      - name: Check for changes and commit
        run: |
          git add agentic-development/docs/auto-generated/
          if git diff --staged --quiet; then
            echo "No documentation changes to commit"
          else
            git config --local user.email "actions@github.com"
            git config --local user.name "GitHub Actions"
            git commit -m "docs: auto-update documentation [skip ci]

            Updated by: ${{ github.actor }}
            Triggered by: ${{ github.event_name }}
            Branch: ${{ github.ref_name }}
            "
            git push
            echo "✅ Documentation updated and pushed"
          fi

      # Upload documentation artifacts
      - name: Upload Documentation Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: auto-generated-docs-${{ github.sha }}
          path: agentic-development/docs/auto-generated/
          retention-days: 30

      # Create summary for PR or push
      - name: Create Documentation Summary
        run: |
          echo "## 📚 Documentation Auto-Generated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Generated Files" >> $GITHUB_STEP_SUMMARY
          echo "- \`agentic-development/docs/auto-generated/recent-commits.md\` - Last 25 commits with context" >> $GITHUB_STEP_SUMMARY
          echo "- \`agentic-development/docs/auto-generated/current-state.md\` - System status and repository info" >> $GITHUB_STEP_SUMMARY  
          echo "- \`agentic-development/docs/auto-generated/doc-tree.md\` - Documentation structure overview" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Purpose" >> $GITHUB_STEP_SUMMARY
          echo "These files provide Claude AI agents with context about:" >> $GITHUB_STEP_SUMMARY
          echo "- Recent development activity" >> $GITHUB_STEP_SUMMARY
          echo "- Current repository state" >> $GITHUB_STEP_SUMMARY
          echo "- Available documentation" >> $GITHUB_STEP_SUMMARY
          echo "- Development patterns and contributors" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Actions" >> $GITHUB_STEP_SUMMARY
          echo "- Documentation committed to repository" >> $GITHUB_STEP_SUMMARY
          echo "- Available for Claude agents in future sessions" >> $GITHUB_STEP_SUMMARY
          echo "- Automatically updates on future commits" >> $GITHUB_STEP_SUMMARY